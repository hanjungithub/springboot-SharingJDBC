spring:
  shardingsphere:
    datasource:
      names: ds0,ds1 #数据源名称，多数据源以逗号分隔
      ds0:
        type: com.alibaba.druid.pool.DruidDataSource #数据库连接池类名称
        driver-class-name: com.mysql.jdbc.Driver #数据库驱动类名
        url: jdbc:mysql://localhost:3306/sharing-0?useUnicode=true&characterEncoding=utf-8&useAffectedRows=true&allowMultiQueries=true  #数据库url连接
        username: root #数据库用户名
        password: admin #数据库密码
      ds1:
          type: com.alibaba.druid.pool.DruidDataSource
          driver-class-name: com.mysql.jdbc.Driver
          url: jdbc:mysql://localhost:3306/sharing-1?useUnicode=true&characterEncoding=utf-8&useAffectedRows=true&allowMultiQueries=true
          username: root
          password: admin
    sharding:
      default-data-source-name: ds0 #未配置分片规则的表将通过默认数据源定位
      default-database-strategy: #默认数据库分片策略，同分库策略
        standard:
          sharding-column: goods_id
          precise-algorithm-class-name: com.example.springbootsharingjdbc.demo.config.GoodsDatabasePreciseShardingAlgorithm
          range-algorithm-class-name: com.example.springbootsharingjdbc.demo.config.GoodsDatabaseRangeShardingAlgorithm
        #inline:
          #sharding-column: goods_id
          #algorithm-expression: ds$->{goods_id <= 20 ? 0:1}
      tables:
        goods:
          actual-data-nodes: ds$->{0..1}.goods_$->{0..1} #由数据源名 + 表名组成，以小数点分隔。多个表以逗号分隔，支持inline表达式。
          table-strategy:
            standard:
              sharding-column: goods_type
              range-algorithm-class-name: com.example.springbootsharingjdbc.demo.config.GoodsTableRangeShardingAlgorithm
              precise-algorithm-class-name: com.example.springbootsharingjdbc.demo.config.GoodsTablePreciseShardingAlgorithm
              #inline:
              #sharding-column: goods_type
              #algorithm-expression: goods_$->{goods_type % 2}
          key-generator:
            column: snow_id #自增列名称，缺省表示不使用自增主键生成器
            type: MyKeyGenerator #自增列值生成器类型，缺省表示使用默认自增列值生成器。可使用用户自定义的列值生成器或选择内置类型：SNOWFLAKE/UUID